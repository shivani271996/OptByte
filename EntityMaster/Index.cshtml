@using CostEstimation;
@using CostEstimation.FX;
@using CostEstimation.Common.Const;

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<style>
    #btnAdmin {
        padding: 10px 13px;
        color: black !important;
        border-width: 1px;
        text-align: center;
        /* margin-top: -2px;
        margin-left: -1px;*/
        border-radius: 4px;
        /*margin-right: -320px;*/
        border-style: outset;
    }

    .dx-button-has-text .dx-button-content, .dx-button .dx-button-content {
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
        padding: 3px;
    }

    .dx-validationsummary-item-content {
        border-bottom: 0px dashed;
        display: inline-block;
        line-height: normal;
    }

    #btnnew {
        padding: 10px 13px;
        color: black !important;
        border-width: 1px;
        text-align: center;
        margin-top: -1px;
        margin-left: 0px;
        border-radius: 4px;
        margin-right: -320px;
        border-style: outset;
    }

    #content {
        padding: 10px 18px;
        min-height: 80vh;
        transition: all 0.3s;
        min-width: 110%;
        margin-left: -55px;
        background-color: whitesmoke;
        margin-top: -20px;
        border-radius: 5px;
    }

    #btnAdmin {
        padding: 10px 13px;
        color: black !important;
        border-width: 1px;
        text-align: center;
        /* margin-top: -2px;
        margin-left: -1px;*/
        border-radius: 4px;
        /*margin-right: -320px;*/
        border-style: outset;
    }

    #dialog-form .modal-header {
        padding: 5px 15px !important;
    }

    #summary {
        padding-left: 10px;
        margin-top: 3px;
        margin-bottom: 10px;
        font-size: 11px;
        font-weight: 700;
        text-decoration: none;
    }

    #button {
        display: block;
    }

    #Region.dx-invalid.dx-texteditor.dx-editor-filled.dx-show-invalid-badge .dx-texteditor-input-container::after, .dx-invalid.dx-texteditor.dx-editor-outlined.dx-show-invalid-badge .dx-texteditor-input-container::after, .dx-invalid.dx-texteditor.dx-editor-underlined.dx-show-invalid-badge .dx-texteditor-input-container::after {
        display: none;
    }

    #btn.btn {
        background-color: lightgray;
        padding: 7px;
        width: 150px;
        text-align: center;
        margin-top: 0px;
        margin-left: 0px;
        border-radius: 0px
    }
</style>
<div id="divLoading" style="margin: 0px; padding: 0px; position: fixed; right: 0px; top: 0px; width: 100%; height: 100%; background-color: #666666; z-index: 30001; opacity: .8; filter: alpha(opacity=70); display: none">
    <p style="position: absolute; top: 30%; left: 45%; color: White;">
        &nbsp; &nbsp;  &nbsp;  &nbsp;  &nbsp;   @resources.PLEASE_WAIT
        <br />
        <img src="~/Images/waiting.gif" alt="" style="height:20%;width:20%" />
    </p>
</div>

<div class="wrapper">
    <div id="content">
        <div class="row">
            <div>
                @if (@TempData.CanAccess(Permissions.ADD))
                {
                    <button id="btnAdmin" class="command-home glyphicon glyphicon-cog" title="Admin Page"></button>
                }
                &nbsp;
            </div>
            <div><label id="btn" class="btn  command-new pull-left ">@resources.ENTITY_MASTER</label>&nbsp;</div>
            <div>
                @if (@TempData.CanAccess(Permissions.ADD))
                {
                    <button id="btnnew" class="glyphicon glyphicon-plus-sign command-new pull-left" title=" New "></button>
                }
            </div>
        </div>
        <div>&nbsp;</div>
        <div class="row" style="">
            <div id="gridEntity"></div>
        </div>
        <div id="contextMenuEntity"></div>
    </div>
</div>

@*FormEdit*@
<form id="frmEntityMaster">

    <div id="dialog-form" role="dialog" aria-hidden="true" tabindex="-1" class="modal" data-backdrop="static">
        <div class="modal-dialog ui-draggable" id="customerDialog">
            <div class="modal-content" style="width: 800px;">
                <div class="modal-header ui-draggable-handle">

                    <div class="col-md-9">
                        <h4 class="modal-title">
                            Save Entity
                        </h4>
                    </div>
                    <div class="col-md-3">
                        <button id="btnClose" class="btn btn-sm btn-danger pull-right" data-dismiss="modal" title="@resources.COMN_CLOSE_BTN" style="margin-left:5px;"><i class="fa fa-window-close" aria-hidden="true"></i></button>
                        <button id="btnSubmit" class="btn btn-sm btn-success pull-right" title="@resources.COMN_SAVE_BTN"><i class="fa fa-save" aria-hidden="true"></i></button>
                    </div>
                </div>
                <div class="modal-body" style="overflow-y: auto;height:550px;">
                    <div id="error"></div>
                    <input type="hidden" name="ID" id="ID" class="form-control" />
                    <div class="row">
                        <div class="col-md-6">
                            <h5><b>@resources.ENTITY_INFORMATION</b></h5>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4">
                            <div>
                                <label>
                                    @resources.ENTITY_NAME <span style="color:red;">* </span>
                                </label>
                            </div>
                            <div>
                                <input type="text" name="EntityName" id="EntityName" class="form-control">
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div>
                                <label>
                                    @resources.ENTITY_CODE
                                    <span style="color:red;">* </span>
                                </label>
                            </div>
                            <div>
                                <input type="text" name="EntityCode" id="EntityCode" class="form-control">
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div>
                                <label>@resources.DESCRIPTION </label>
                            </div>
                            <div>
                                <textarea type="text" name="Description" id="Description" class="form-control" style="height:35px; resize:none"></textarea>
                            </div>
                        </div>

                    </div>

                    <div class="row">
                        <div class="col-md-4">

                            <div>
                                <label>
                                    @resources.REGION_ID
                                    <span style="color:red;">* </span>
                                </label>
                            </div>
                            <div>
                                <div id="Region"></div>
                                <div class="summary"></div>

                            </div>
                        </div>
                        <div class="col-md-4">
                            <div>
                                <label>
                                    @resources.COUNTRY_ID
                                    <span style="color:red;">* </span>
                                </label>
                            </div>
                            <div>
                                <div id="CountryId"></div>

                            </div>
                        </div>
                        <div class="col-md-4">
                            <div>
                                <label>
                                    @resources.CURRENCY_ID
                                    <span style="color:red;">* </span>
                                </label>
                                <div>
                                    <div id="CurrencyId"></div>

                                </div>
                            </div>
                        </div>

                    </div>


                    <div class="row">
                        <div class="col-md-6">
                            <h5><b>@resources.ENTITY_ADDRESS</b></h5>
                        </div>
                    </div>
                    <div class="row">

                        <div class="col-md-4">
                            <div>
                                <label>@resources.ADDRESS_LINE1</label>
                                <span style="color:red;">* </span>
                            </div>
                            <div>
                                <input type="text" name="AddressLine1" id="AddressLine1" class="form-control" autocomplete="off">
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div>
                                <label>@resources.ADDRESS_LINE2</label>

                            </div>
                            <div>
                                <input type="text" name="AddressLine2" id="AddressLine2" class="form-control" autocomplete="off">
                            </div>
                        </div>

                        <div class="col-md-4">
                            <div>
                                <label>@resources.ADDRESS_LINE3</label>

                            </div>
                            <div>
                                <input type="text" name="AddressLine3" id="AddressLine3" class="form-control" autocomplete="off">
                            </div>
                        </div>

                    </div>

                    <div class="row">
                        <div class="col-md-4">
                            <div>
                                <label>@resources.CITY_NAME</label>
                                <span style="color:red;">* </span>

                            </div>
                            <div>

                                <input type="text" name="CityName" id="CityName" class="form-control" autocomplete="off">
                                <span id="show" class="text-red" style="display:none;"> Number not allowed </span>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div>
                                <label>@resources.POSTAL_CODE</label>
                                <span style="color:red;">* </span>
                            </div>
                            <div>
                                <input type="text" name="PostalCode" id="PostalCode" class="form-control" minlength="3" maxlength="7" autocomplete="off">

                            </div>
                        </div>
                        <div class="col-md-4">
                            <div>
                                <label>@resources.PHONE_OFFICE</label>
                                <span style="color:red;">* </span>
                            </div>
                            <div>
                                <input type="text" name="PhoneOffice" id="PhoneOffice" class="form-control" minlength="10" maxlength="15" autocomplete="off">
                            </div>
                        </div>

                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <h5><b>@resources.OTHER_INFORMATION</b></h5>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4">
                            <div>
                                <label>@resources.REGISTRATION_NUMBER <span style="color:red;">* </span></label>
                            </div>
                            <div>
                                <input type="text" class="form-control" id="RegistrationNumber" name="RegistrationNumber" />
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div>
                                <label>@resources.TAX_NUMBER <span style="color:red;">* </span></label>
                            </div>
                            <div>
                                <input type="text" class="form-control" id="TaxNumber" name="TaxNumber" />
                            </div>
                        </div>

                        <div class="col-md-4">
                            <div>
                                <label>@resources.FAX</label>

                            </div>
                            <div>
                                <input type="text" name="Fax" id="Fax" class="form-control" autocomplete="off">
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div>
                                <label>@resources.EMAIL</label>
                                <span style="color:red;">* </span>
                            </div>
                            <div>
                                <input type="email" name="Email" id="Email" class="form-control">
                                <span id="showemail" class="text-red" style="display:none;"> = + _ - not allowed </span>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div>
                                <label>@resources.WEBSITE </label>
                            </div>
                            <div>
                                <input type="text" name="WebSite" id="WebSite" class="form-control" autocomplete="off" placeholder="https://example.com"
                                       pattern="https://.*" />
                            </div>
                        </div>

                    </div>


                    <div class="row">
                        <div class="col-md-6">
                            <h5><b>@resources.ACCOUNT_DETAILS</b></h5>
                        </div>
                    </div>

                    <div class="row">

                        <div class="col-md-4">
                            <div>
                                <label>@resources.BANK_NAME </label>
                            </div>
                            <div>
                                <input type="text" name="BankName" id="BankName" class="form-control" autocomplete="off" />
                            </div>
                        </div>

                        <div class="col-md-4">
                            <div>
                                <label>@resources.BANK_ADDRESS </label>
                            </div>
                            <div>
                                <input type="text" name="BankAddress" id="BankAddress" class="form-control" autocomplete="off">

                            </div>
                        </div>
                        <div class="col-md-4">
                            <div>
                                <label>@resources.BANK_SWIFTCODE </label>
                            </div>
                            <div>
                                <input type="text" name="BankSwiftCode" id="BankSwiftCode" class="form-control" autocomplete="off">
                            </div>
                        </div>

                    </div>

                    <div class="row">

                        <div class="col-md-4">
                            <div>
                                <label>@resources.BANK_ACCOUNTNO</label>

                            </div>
                            <div>
                                <input type="text" name="BankAccountNo" id="BankAccountNo" class="form-control" autocomplete="off">
                            </div>
                        </div>


                        <div class="col-md-4">
                            <div>
                                <label>@resources.IBAN_NO</label>

                            </div>
                            <div>
                                <input type="text" name="IBANNo" id="IBANNo" class="form-control" autocomplete="off">
                            </div>
                        </div>

                        <div class="col-md-4">
                            <div>
                                <label>
                                    @resources.BENEFICIARY_NAME

                                </label>
                            </div>
                            <div>
                                <input type="text" name="BeneficiaryName" id="BeneficiaryName" class="form-control">
                            </div>
                        </div>


                    </div>

                </div>
            </div>
        </div>
    </div>
</form>
<!-- Central Modal Medium -->
<div class="modal fade" id="centralModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header" style="background:#d9534f;">
                <div class="col-md-9">
                    <h4 class="modal-title w-100" id="myModalLabel">Alert!</h4>
                </div>
                <div class="col-md-3">
                    <input type="hidden" id="deletedId" />
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
            </div>
            <div class="modal-body" id="alert_text">

            </div>
            <div class="modal-footer">
                <button type="button" id="btnYes" class="btn btn-danger">Yes</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">No</button>
            </div>
        </div>
    </div>
</div>
<!-- Central Modal Medium -->
@section scripts{
    <script>
        
        const ViewBag = {
              userid : @ViewBag.UserId,
        }

        const access = {
            permupdate: '@TempData.CanAccess(Permissions.UPDATE)'==='True'? true : false,
            permdelete: '@TempData.CanAccess(Permissions.DELETE)'==='True'? true : false,
            permadd: '@TempData.CanAccess(Permissions.ADD)'==='True'? true : false,
        }
        //Add name in Resourcefile
        const resource = {
            exporttoexcel: '@resources.EXPORT_TO_EXCEL',
            entityaddbtn: '@resources.ENTITY_ADD_BTN',
            searchplcholder: '@resources.COMN_SEARCH_PLC_HOLDER',
            clearbtn: '@resources.COMN_CLEAR_BTN',
            selectonelbl: '@resources.COMN_SELECTONE_LBL',
            btnclosetext : '@resources.COMN_CLOSE_BTN',
            title: '@resources.COMN_ALERT_TITLE_MSG',
            confirmyes: '@resources.COMN_YES_LBL',
            confirmno: '@resources.COMN_NO_LBL',
            pagetitle: '@resources.ENTITY_MASTER'
        }

    </script>

    <script>
        $(() => {
            // $('.summary').dxValidationSummary({});


            $('#btnSubmit').dxButton({
                text: 'Register',
                type: 'success',
                useSubmitBehavior: true,
               
            });
            
        });

        $('#btnClose').dxButton({
            //text: "Reset Validation",
            useSubmitBehavior: false,

            onClick: function (e) {

                $("#Region").dxValidator("instance").reset(),
                    $("#CountryId").dxValidator("instance").reset(),
                    $("#CurrencyId").dxValidator("instance").reset()
            }
        });




        $(function () {

            var ID = 0;

            // Validations
            $("#frmEntityMaster").validate({
                rules: {
                    EntityName: {  //Copy from json strignifier
                        required: true
                    },
                    EntityCode: {
                        required: true
                    },

                    RegistrationNumber: {
                        required: true,

                    },
                    TaxNumber: {
                        required: true,

                    },

                    AddressLine1: {
                        required: true,

                    },
                    PostalCode: {
                        required: true,

                        digits: 'abcdefghigklmnopqrstuvwxyz',

                    },
                    CityName: {
                        required: true,

                    },

                    CountryId: {
                        required: true,

                    },
                    PhoneOffice: {
                        required: true,

                        digits: 'abcdefghigklmnopqrstuvwxyz',
                    },
                    Email: {
                        required: true,
                        /*regex: /^\w+([\.-]?\w+)*\w+([\.-]?\w+)*(\.\w{2,3})+$/*/
                    },
                    BeneficiaryName: {
                        regex: /^[A-Za-z]+$/
                    }

                },
                messages: {
                    Email: {
                        required: 'Please enter Email',
                    },
                    EntityCode: {
                        required: 'Please enter Entity Code',
                    },

                    EntityName: {
                        required: 'Please enter Entity Name',
                    },

                    RegistrationNumber: {
                        required: 'Please enter Registration No ',
                    },
                    TaxNumber: {
                        required: 'Please enter Tax No',

                    },
                    AddressLine1: {
                        required: 'Please enter Address',

                    },

                    PostalCode: {

                        required: 'Please enter Postal Code',

                        digits: "Please enter only Number",
                    },
                    CityName: {
                        required: 'Please enter City',

                    },

                    CountryId: {
                        required: 'Please Select',
                    },
                    PhoneOffice: {
                        required: 'Please enter Phone No',

                        digits: "Please enter Phone number",
                    }

                }

            });

            let searchVal = '';

            $('#CityName').keypress(function (e) {
                var regex = new RegExp("^[a-zA-Z]+$");
                var str = String.fromCharCode(!e.charCode ? e.which : e.charCode);
                if (regex.test(str)) {
                    $('#show').hide();
                    return true;
                }
                e.preventDefault();
                $('#show').show();
                setTimeout(function () {
                    $('#show').fadeOut('fast');
                }, 2000);
                return false;
            });
            $('#Email').keypress(function (e) {
                var regex = new RegExp("^[a-zA-Z.@@]+$");
                var str = String.fromCharCode(!e.charCode ? e.which : e.charCode);
                if (regex.test(str)) {
                    $('#showemail').hide();
                    return true;
                }
                e.preventDefault();
                $('#showemail').show();
                setTimeout(function () {
                    $('#showemail').fadeOut('fast');
                }, 2000);
                return false;
            });

            // Buttons
            $("#btnnew").click(function () {
                clearcontrol();
                ds.load();
                $('#btnSubmit').attr('hidden', false);
                $("form :input").attr("disabled", false);
                $('#btnClose').attr('disabled', false);
                $(".modal-title").text("Save Entity");
                $('#dialog-form').modal('show');
                $("#customerDialog").draggable({ handle: "div.modal-header" });
                $("#btnSendInvite").prop('hidden', true);

            });

            $("#btnClear").click(function () {
                $("#txtSearch").val('');
                $("#grid-basic").bootgrid("search", "");

            });
            $("#btnCancel").click(function () {
                clearcontrol();
                $('#dialog-form').modal('hide');
            });

            // For bidning Data with modal form
            function bindEntityDatawithcntl(data) {
                $('#ID').val(data.ID);
                console.log(data.ID)

                console.log(data.CountryId);
                console.log(data.regionId)
                var regionId = parseInt(data.Region);
                var countryId = parseInt(data.CountryId);
                var currencyId = parseInt(data.CurrencyId);
                console.log(countryDs);

                ds.load().done(function (data) {
                    regionDDList.option("value", regionId);
                    countryDs.load().done(function (data) {
                        countryDdl.option("value", countryId);
                    });
                });

                currDs.load().done(function (data) {
                    currDdl.option("value", currencyId);
                });

                console.log(CurrencyId);
                console.log(currDdl);

                $('#CityName').val(data.CityName);
                $('#EntityName').val(data.EntityName);
                $('#EntityCode').val(data.EntityCode);
                $('#Description').val(data.Description);
                $('#RegistrationNumber').val(data.RegistrationNumber);
                $('#TaxNumber').val(data.TaxNumber);
                $('#AddressLine1').val(data.AddressLine1);
                $('#AddressLine2').val(data.AddressLine2);
                $('#AddressLine3').val(data.AddressLine3);

                $('#PostalCode').val(data.PostalCode);
                $('#PhoneOffice').val(data.PhoneOffice);
                $('#Fax').val(data.Fax);
                $('#Email').val(data.Email);
                $('#WebSite').val(data.WebSite);
                //$('#CurrencyId').val(data.CurrencyId);
                $('#BankName').val(data.BankName);
                $('#BeneficiaryName').val(data.BeneficiaryName);
                $('#BankAddress').val(data.BankAddress);
                $('#BankSwiftCode').val(data.BankSwiftCode);

                $('#BankAccountNo').val(data.BankAccountNo);
                $('#IBANNo').val(data.IBANNo);
            }

            // For Clearing Errors on Modal form
            function clearcontrol() {
                $('#ID').val(0);  //0
                //$('#Region').dxSelectBox();
                regionDDList.reset();
                countryDdl.reset();
                currDdl.reset();

                $('label.error').remove();
                $('#Region').val('');
                $('#Region').dxValidator();
                $('#CityName').val('');
                $('#EntityName').val('');
                $('#EntityCode').val('');
                $('#Description').val('');
                $('#RegistrationNumber').val('');
                $('#TaxNumber').val('');
                $('#AddressLine1').val('');
                $('#AddressLine2').val('');
                $('#AddressLine3').val('');
                $('#PostalCode').val('');
                $('#PhoneOffice').val('');
                $('#Fax').val('');
                $('#Email').val('');
                $('#WebSite').val('');

                $('#BankName').val('');

                $('#BankAddress').val('');
                $('#BeneficiaryName').val('');
                $('#BankSwiftCode').val('');
                $('#BankAccountNo').val('');
                $('#IBANNo').val('');

            }

            $('#Region').dxSelectBox({
                placeholder: 'Select one',
                displayExpr: 'Region',
                valueExpr: 'RegionId',
                dataSource: DevExpress.data.AspNet.createStore({
                    key: "RegionId",
                    loadUrl: "Masters/RegionMaster/GetRegionForCountry"
                }),

                onValueChanged(e) {
                    console.log(e.value);

                    countryDdl.reset();
                    countryDs.reload();

                }
            }).dxValidator({
                validationRules: [{
                    type: 'required',
                    message: 'Region is required',
                }],
            });

            const regionDDList = $('#Region').dxSelectBox("instance");
            const ds = regionDDList.getDataSource();
            ds.load();

            var store = new DevExpress.data.CustomStore({
                key: "CountryID",
                load: function (loadOptions) {
                    const deferred = $.Deferred();
                    $.ajax({
                        url: 'Masters/CountryMaster/GetCountryListByRegion',
                        dataType: 'json',
                        data: { regionId: regionDDList.option("value") },
                        success(result) {
                            console.log(result);

                            deferred.resolve(result, {});

                        },
                        error() {
                            deferred.reject('Data Loading Error');
                        },
                        timeout: 5000,
                    });
                    return deferred.promise();
                },
                byKey: function (key) {

                }
            });

            $('#CountryId').dxSelectBox({
                placeholder: 'Select one',
                displayExpr: 'CountryName',
                valueExpr: 'CountryID',
                type: 'required',
                dataSource: store
            }).dxValidator({
                validationRules: [{
                    type: 'required',
                    message: 'Country is required',
                }],
            });

            //Edit
            const countryDdl = $('#CountryId').dxSelectBox("instance");
            const countryDs = countryDdl.getDataSource();

            //console.log(CurrencyCode)
            $('#CurrencyId').dxSelectBox({
                placeholder: 'Select one',
                displayExpr: 'CurrencyCode',     //present data from CurrencyCode
                valueExpr: 'CurrencyID',

                dataSource: DevExpress.data.AspNet.createStore({
                    key: "CurrencyID",

                    loadUrl: "Masters/CurrencyMaster/GetCurrencyList"

                }),

                onChanged(e) {

                    currset.reset();
                    currDs.reload();

                }

            }).dxValidator({
                validationRules: [{
                    type: 'required',

                }],
            });

            const currDdl = $('#CurrencyId').dxSelectBox("instance");
            const currDs = currDdl.getDataSource();

            $(document).on('keypress', '#customerDialog', function (event) {
                var keyPressed = event.keyCode || event.which;
                if (keyPressed === 13) {
                    event.preventDefault();
                    return false;
                }

            });

            logoContentType = null;

            let manuItems = [];

            $("#contextMenuEntity").dxContextMenu({
                target: "#btnManu",
                displayExpr: "name",
                itemsExpr: "items",
                onItemClick: onItemClick,

                onHiding: function (e) {
                    abc = null;
                },
            });


            function onItemClick(e) {

                switch (e.itemData.name) {
                    case "Edit":
                        onEdit(ID);
                        break;
                    case "Delete":
                        onDelete(ID);
                        break;

                }
            }

            // For Editing
            function onEdit(ID) {
                clearcontrol();
                $('#dialog-form').modal('show');
                $('#divLoading').show();
                $.ajax({
                    type: 'POST',
                    url: "Masters/EntityMaster/GetEntityById",
                    data: { 'ID': ID },
                    dataType: 'json',
                    success: function (data) {
                        $(".modal-title").text("Edit Entity");
                        $('#divLoading').hide();
                        bindEntityDatawithcntl(data);
                    },
                    error: function (ex) {
                        showErrorMsg(ex);
                        $('#divLoading').hide();
                    }
                });

            }

            // For Deleting
            function onDelete(e) {
                $(".modal-title").text("Alert !");
                $('#alert_text').text("Do you want to delete this Entity?");
                $('#centralModal').modal('show');
                $('#deletedId').val(e);
            }

            $("#btnYes").on("click", function () {

                $('#divLoading').show();
                $.ajax({
                    type: 'POST',
                    url: "Masters/EntityMaster/DeleteById",

                    data: { 'ID': $('#deletedId').val() },
                    dataType: 'json',
                    success: function (data) {
                        $('#centralModal').modal('hide');
                        showSuccessMsg('Deleted Successfully!!');
                        datagrid.refresh();
                        ID = 0;
                        $('#divLoading').hide();
                    },
                    error: function (ex) {
                        $('#divLoading').hide();
                        showErrorMsg(ex);
                        errorHandler(ex);
                    }
                });
            });

            $("#btnSubmit").click(function () {

                if (!$("#frmEntityMaster").valid()) {
                    return false;
                }
                $("#btnSubmit").prop('disabled', true);
                $("#divLoading").show();

                var formData = new FormData(document.getElementById("frmEntityMaster")), formobject = {}; for (var entry of formData.entries()) { formobject[entry[0]] = entry[1]; }

                let entityModel = JSON.stringify({
                    ID: parseInt($('#ID').val()),

                    EntityName: encodeString($('#EntityName').val()),
                    EntityCode: encodeString($('#EntityCode').val()),
                    Description: encodeString($('#Description').val()),
                    RegistrationNumber: encodeString($('#RegistrationNumber').val()),
                    TaxNumber: encodeString($('#TaxNumber').val()),
                    CurrencyId: encodeString($('#CurrencyId').val()),
                    BeneficiaryName: encodeString($('#BeneficiaryName').val()),
                    BankName: encodeString($('#BankName').val()),
                    BankAddress: encodeString($('#BankAddress').val()),
                    BankSwiftCode: encodeString($('#BankSwiftCode').val()),
                    BankAccountNo: encodeString($('#BankAccountNo').val()),
                    IBANNo: encodeString($('#IBANNo').val()),
                    AddressLine1: encodeString($('#AddressLine1').val()),
                    AddressLine2: encodeString($('#AddressLine2').val()),
                    AddressLine3: encodeString($('#AddressLine3').val()),
                    PostalCode: encodeString($('#PostalCode').val()),
                    CityName: encodeString($('#CityName').val()),

                    Region: encodeString(regionDDList.option("value")),
                    CountryId: encodeString(countryDdl.option("value")),
                    CurrencyId: encodeString(currDdl.option("value")),
                   
                    PhoneOffice: encodeString($('#PhoneOffice').val()),
                    Email: encodeString($('#Email').val()),
                    Fax: encodeString($('#Fax').val()),
                    WebSite: encodeString($('#WebSite').val()),

                })

                $.ajax({
                    url: 'Masters/EntityMaster/EntityMaster',
                    dataType: "json",
                    data: entityModel,
                    type: "POST",
                    contentType: "application/json; charset=utf-8",

                    success: function (data) {
                        clearcontrol();
                        $("#divLoading").show();
                        $('#dialog-form').modal('hide');

                        if (data.isExist) {
                            $("#btnSubmit").prop('disabled', false);
                            showWarningMsg("This Entity is already exist");
                            return false;
                        }
                        else {
                            $("#btnSubmit").prop('disabled', false);
                            showSuccessMsg('Submitted Successfully!!');
                            ID = 0;
                            datagrid.refresh();
                        }

                        $("#divLoading").hide();
                    },
                    error: function (err) {
                        $("#btnSubmit").prop('disabled', false);
                        clearcontrol();
                        $('#dialog-form').modal('hide');
                        showErrorMsg(err.responseText);
                        $("#divLoading").hide();
                    }
                });
            });
            function isNotEmpty(value) {
                return value !== undefined && value !== null && value !== '';
            }
            // Code For Dx.Datagrid
            const datagrid = $('#gridEntity').dxDataGrid({
                dataSource: new DevExpress.data.CustomStore({
                    key: "ID",
                    loadMode: "raw",
                    load: function (loadOptions) {
                        let d = $.Deferred();

                        const args = {};

                        [
                            'skip',
                            'take',
                            'requireTotalCount',
                            'requireGroupCount',
                            'sort',
                            'filter',
                            'totalSummary',
                            'group',

                            "parentIds",

                            "searchExpr",
                            "searchOperation",
                            "searchValue",
                        ].forEach((i) => {
                            if (i in loadOptions && isNotEmpty(loadOptions[i])) {
                                args[i] = JSON.stringify(loadOptions[i]);
                            }
                        });

                        $.getJSON("Masters/EntityMaster/GetEntityBrowser", args)
                            .done(function (response) {
                                console.log(response);
                                d.resolve(response.rows, {
                                    totalCount: response.totalCount,
                                    summary: null,
                                    groupCount: null
                                })
                                console.log(response.totalCount);
                               
                            })
                            .fail(function () { throw "Data loading error" });
                        
                        return d.promise();
                    }
                }),
                searchPanel: {
                    visible: true,
                    /*highlightCaseSensitive: true,*/
                },
                scrolling: {
                    mode: 'virtual',
                    rowRenderingMode: 'virtual',
                },
                paging: {
                    pageSize: 10
                },
                pager: {
                    visible: true,
                    showPageSizeSelector: true,
                    allowedPageSizes: [10, 20, 50, 100, 250, 500],
                    showPageSizeSelector: true,
                    showInfo: true,       //pageinfo
                    showNavigationButtons: true,
                },
                loadPanel: {
                    enabled: true,
                },
                //
                onCellPrepared: function onCellPrepared(e) {
                    if (e.rowType == "header") {
                        e.cellElement.css("text-align", "center");
                        e.cellElement.css("font-weight", "bold");
                    }
                    if (e.rowType == "data") {
                        e.cellElement.css("text-align", "left");
                    }
                    if (e.rowType == "data" && (e.columnIndex == 13
                        || e.columnIndex == 9 || e.columnIndex == 12
                        || e.columnIndex == 0 || e.columnIndex == 2)) {
                        e.cellElement.css("text-align", "center");
                    }

                },
                //
                columnAutoWidth: true,
                columnFixing: { enabled: true },
                allowColumnResizing: true,
                columnResizingMode: 'widget',
                width: '100%',
                rowAlternationEnabled: true,
                showBoarders: true,
                showColumnLines: true,
                showRowLines: true,
                remoteOperations: true,
                scrolling: {
                    enabled: true,
                },
                columnChooser: {
                    enabled: true,
                    mode: "select",
                },
                Sorting: {
                    mode: 'multiple',
                },
                export: {
                    enabled: true,
                    fileName: "EntityMaster",
                },

                onExported(e) {
                    e.component.columnOption('Actions', 'visible', true);
                    e.component.endUpdate();
                   
                },
                onOptionChanged: function (e) {
                    if (e && e.name == 'searchPanel') {
                        searchVal = e.value;
                        datagrid.refresh();
                    }
                },
                onRowClick: function (e) {
                    if (e.rowType === "data") {
                        ID = e.data.ID;

                    }
                    if (abc) {
                        manuItems = [];
                        if (access.permupdate) {
                            manuItems.push({ name: 'Edit' });
                        }

                        if (access.permdelete) {
                            manuItems.push({ name: 'Delete' });
                        }

                        $('#contextMenuEntity').dxContextMenu('instance').option('items', manuItems);
                        $('#contextMenuEntity').dxContextMenu('instance').option('target', abc);
                        $('#contextMenuEntity').dxContextMenu('instance').show();
                    }
                },
                onContextMenuPreparing: function (e) {
                    let menuitems2 = []
                    if (access.permupdate) {
                        menuitems2.push({
                            text: "Edit",
                            onItemClick: function () {
                                onEdit(e.row.data.ID);
                            }
                        });
                    }
                    if (access.permdelete) {
                        menuitems2.push({
                            text: "Delete",
                            onItemClick: function () {
                                onDelete(e.row.data.ID);
                            }
                        });
                    }

                    if (e.row && e.row.rowType === "data" && menuitems2.length > 0) {
                        e.items = menuitems2;
                    }
                },

                columns: [
                    {
                        dataField: 'RowNumber',
                        caption: '#',
                        alignment: 'center',
                        maxWidth: 30,

                    },
                    {
                        dataField: 'ID',
                        caption: 'ID',
                        alignment: 'center',
                        maxWidth: 100,
                        showInColumnChooser: true,
                        visible: false,
                    },
                    {
                        dataField: 'EntityName',   //sql
                        caption: 'Entity Name',  //Resource
                        alignment: 'center',
                        maxWidth: 100,
                    },
                    {
                        dataField: 'EntityCode',
                        caption: 'Entity Code',
                        alignment: 'center',
                        maxWidth: 100,
                    },
                    {
                        dataField: 'Description',
                        caption: 'Description',
                        alignment: 'center',
                        maxWidth: 150,
                        visible: false,
                    },
                    {
                        dataField: 'RegistrationNumber',
                        caption: 'Registration Number',
                        alignment: 'center',
                        maxWidth: 100,
                    },
                    {
                        dataField: 'Region',
                        caption: 'Region',
                        alignment: 'center',
                        maxWidth: 105,
                    },
                    {
                        dataField: 'CountryId',
                        caption: 'Country',
                        alignment: 'center',
                        maxWidth: 105,

                    },
                    {
                        dataField: 'CityName',
                        caption: 'City Name',
                        alignment: 'center',
                        maxWidth: 105,
                    },


                    {
                        dataField: 'TaxNumber',
                        caption: 'Tax Number',
                        alignment: 'center',
                        maxWidth: 100,
                    },
                    //
                    {
                        dataField: 'AddressLine1',
                        caption: 'Address Line 1',
                        alignment: 'center',
                        maxWidth: 105,
                    },
                    {
                        dataField: 'AddressLine2',
                        caption: 'Address Line 2',
                        alignment: 'center',
                        maxWidth: 105,
                        visible: false,
                    },
                    {
                        dataField: 'AddressLine3',
                        caption: 'Address Line 3',
                        alignment: 'center',
                        maxWidth: 105,
                        visible: false,
                    },

                    {
                        dataField: 'PostalCode',
                        caption: 'Postal Code',
                        alignment: 'center',
                        maxWidth: 105,
                    },

                    {
                        dataField: 'PhoneOffice',
                        caption: 'Phone Office',
                        alignment: 'center',
                        maxWidth: 105,
                    },
                    {
                        dataField: 'Email',
                        caption: 'Email',
                        alignment: 'center',
                        maxWidth: 105,
                    },
                    //
                    {
                        dataField: 'Fax',
                        caption: 'Fax',
                        alignment: 'center',
                        maxWidth: 105,
                        visible: false,
                    },

                    {
                        dataField: 'WebSite',
                        caption: 'Web Site',
                        alignment: 'center',
                        maxWidth: 105,
                        visible: false,
                    },
                    {
                        dataField: 'CurrencyId',
                        caption: 'Currency',
                        alignment: 'center',
                        maxWidth: 105,
                        //filter: options.data ? ['CountryId', '=', options.data.CountryId] : null,
                    },
                    {
                        dataField: 'BeneficiaryName',
                        caption: 'Beneficiary Name',
                        alignment: 'center',
                        maxWidth: 100,
                        visible: false,
                    },

                    {
                        dataField: 'BankName',
                        caption: 'Bank Name',
                        alignment: 'center',
                        maxWidth: 100,
                        visible: false,
                    },
                    {
                        dataField: 'BankAddress',
                        caption: 'Bank Address',
                        alignment: 'center',
                        maxWidth: 100,
                        visible: false,
                    },
                    {
                        dataField: 'BankSwiftCode',
                        caption: 'Bank Swift Code',
                        alignment: 'center',
                        maxWidth: 90,
                        visible: false,
                    },
                    {
                        dataField: 'BankAccountNo',
                        caption: 'Bank Account No',
                        alignment: 'center',
                        maxWidth: 105,
                        visible: false,
                    },
                    {
                        dataField: 'IBANNo',
                        caption: 'IBAN NO',
                        alignment: 'center',
                        maxWidth: 105,
                        visible: false,
                    },
                    {
                        caption: 'Actions',
                        alignment: 'center',
                        maxWidth: 80,
                        fixed: true,
                        fixedPosition: "right",        // to set the right
                        cellTemplate: formatersCellTemplate,
                        showInColumnChooser: false,
                    }
                ],

            }).dxDataGrid('instance');

        });
        //Done

        const formatersCellTemplate = function (entity, options) {

            $('<button class="fa fa-ellipsis-h menuButton" style="cursor: pointer;border:0px" onClick="showManu(event)"></button>').appendTo(entity);
        };

        var abc;
        function showManu(e) {
            if (e.target) {
                abc = e.target;

            }
        }

        $(document).on("click", ".command-home", function () {
            document.location = "Admin/Admin";
        });


    </script>
}
